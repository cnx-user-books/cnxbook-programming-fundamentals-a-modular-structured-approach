! SoftChalk LessonBuilder TIV File (C)2003-2008
! ================ DO NOT EDIT ================

act_item=9

act_num=9
act_type=2
items=18
colorChoice=_B
showList=false
showFlashCardTerm=true
showFlashCardDef=false
useFlashBigText=false
instructions=Click 'Show' to see the hidden portion.
wordPair[1]=system analyst|Computer professional in charge of creating applications.|noimage
wordPair[2]=applications|An information system or collection of programs that handles a major task.|noimage
wordPair[3]=life cycle|Systems Development Life Cycle: Planning - Analysis - Design - Implementation - Maintenance|noimage
wordPair[4]=implementation|The phase of a Systems Development Life Cycle where the programmers would be assigned to write specific programs.|noimage
wordPair[5]=open source|Group development of source code for software that is made available to the public at no cost.|noimage
wordPair[6]=portability|The ability to transport software on a flash drive and thus use it on various machines.|noimage
wordPair[7]=folder|A named area for storage of documents or other files on a disk drive or flash drive.|noimage
wordPair[8]=source code|Any collection of statements or declarations written in some human-readable computer programming language.|noimage
wordPair[9]=modularization|The ability to group some lines of code into a unit that can be included in our program.|noimage
wordPair[10]=function|What modules are called in the two predominant programming languages of today: C++ and Java.|noimage
wordPair[11]=program control|Functions used to simply sub divide and control the program.|noimage
wordPair[12]=specific task|Functions designed to be used with several programs.|noimage
wordPair[13]=parameter passing|How the data is communicated in to and out of a function.|noimage
wordPair[14]=identifier name|The name given by the programmer to identify a function or other program items such as variables.|noimage
wordPair[15]=function prototype|A function's communications declaration to a complier.|noimage
wordPair[16]=function call|A function's using or invoking of another function.|noimage
wordPair[17]=function definition|The code that defines what a function does.|noimage
wordPair[18]=braces|Used to identify a block of code in C++.|noimage
inline=false
points=0
showRestart=true
sqrsize=20
adaDescription=
playFeedback=true
hotspotWidth=450
hotspotHeight=500

act_num=5
act_type=6
items=18
colorChoice=_B
showList=false
showFlashCardTerm=true
showFlashCardDef=false
useFlashBigText=false
instructions=Solve the crossword puzzle.
wordPair[1]=SystemAnalyst|Computer professional in charge of creating applications.
wordPair[2]=applications|An information system or collection of programs that handles a major task.
wordPair[3]=LifeCycle|Systems Development Life Cycle: Planning - Analysis - Design - Implementation - Maintenance
wordPair[4]=implementation|The phase of a Systems Development Life Cycle where the programmers would be assigned to write specific programs.
wordPair[5]=OpenSource|Group development of source code for software that is made available to the public at no cost.
wordPair[6]=portability|The ability to transport software on a flash drive and thus use it on various machines.
wordPair[7]=folder|A named area for storage of documents or other files on a disk drive or flash drive.
wordPair[8]=SourceCode|Any collection of statements or declarations written in some human-readable computer programming language.
wordPair[9]=modularization|The ability to group some lines of code into a unit that can be included in our program.
wordPair[10]=function|What modules are called in the two predominant programming languages of today: C++ and Java.
wordPair[11]=ProgramControl|Functions used to simply sub divide and control the program.
wordPair[12]=SpecificTask|Functions designed to be used with several programs.
wordPair[13]=IdentifierName|The name given by the programmer to identify a function or other program items such as variables.
wordPair[14]=FunctionCall|A function's using or invoking of another function.
wordPair[15]=braces|Used to identify a block of code in C++.
wordPair[16]=ParameterPassing|How the data is communicated in to and out of a function.
wordPair[17]=FunctionPrototype|A function's communications declaration to a complier.
wordPair[18]=FunctionDefinition|The code that defines what a function does.
inline=false
points=0
showRestart=true
sqrsize=20
adaDescription=
playFeedback=true
hotspotWidth=450
hotspotHeight=500

act_num=6
act_type=3
items=26
colorChoice=_B
showList=false
showFlashCardTerm=true
showFlashCardDef=false
useFlashBigText=false
instructions=Click and drag to highlight a found word from the list.
seekawordHintOption=true
wordPair[1]=System
wordPair[2]=Analyst
wordPair[3]=applications
wordPair[4]=Life
wordPair[5]=Cycle
wordPair[6]=implementation
wordPair[7]=Open
wordPair[8]=Source
wordPair[9]=portability
wordPair[10]=folder
wordPair[11]=Code
wordPair[12]=modularization
wordPair[13]=function
wordPair[14]=Program
wordPair[15]=Control
wordPair[16]=Specific
wordPair[17]=Task
wordPair[18]=Parameter
wordPair[19]=Passing
wordPair[20]=Identifier
wordPair[21]=Name
wordPair[22]=Function
wordPair[23]=Prototype
wordPair[24]=Call
wordPair[25]=Definition
wordPair[26]=braces
inline=false
points=0
showRestart=true
sqrsize=20
adaDescription=
playFeedback=true
hotspotWidth=450
hotspotHeight=500

act_num=1
act_type=5
items=3
colorChoice=_B
showList=false
showFlashCardTerm=true
showFlashCardDef=false
useFlashBigText=false
instructions=Drag items from the left column to the correct order in the right column; for the way in which they are usually encountered in a program.
wordPair[1]=function prototype
wordPair[2]=function call
wordPair[3]=function definition
inline=false
points=0
showRestart=true
sqrsize=13
adaDescription=
playFeedback=true
hotspotWidth=450
hotspotHeight=500

