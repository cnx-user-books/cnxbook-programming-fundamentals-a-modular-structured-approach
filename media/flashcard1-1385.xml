<?xml version='1.0'?>
<order>
<color>E7E7F5</color>
<showterm>true</showterm>
<showdef>false</showdef>
<customDeckText>Custom Deck</customDeckText>
<wholeDeckText>Whole Deck</wholeDeckText>
<showText>SHOW</showText>
<addToText>Add to Custom</addToText>
<showTermText>Show Term</showTermText>
<showDefText>Show Definition</showDefText>
<orderset value='1'>
 <term>system analyst</term>
 <def>Computer professional in charge of creating applications.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='2'>
 <term>applications</term>
 <def>An information system or collection of programs that handles a major task.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='3'>
 <term>life cycle</term>
 <def>Systems Development Life Cycle: Planning - Analysis - Design - Implementation - Maintenance</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='4'>
 <term>implementation</term>
 <def>The phase of a Systems Development Life Cycle where the programmers would be assigned to write specific programs.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='5'>
 <term>open source</term>
 <def>Group development of source code for software that is made available to the public at no cost.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='6'>
 <term>portability</term>
 <def>The ability to transport software on a flash drive and thus use it on various machines.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='7'>
 <term>folder</term>
 <def>A named area for storage of documents or other files on a disk drive or flash drive.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='8'>
 <term>source code</term>
 <def>Any collection of statements or declarations written in some human-readable computer programming language.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='9'>
 <term>modularization</term>
 <def>The ability to group some lines of code into a unit that can be included in our program.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='10'>
 <term>function</term>
 <def>What modules are called in the two predominant programming languages of today: C++ and Java.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='11'>
 <term>program control</term>
 <def>Functions used to simply sub divide and control the program.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='12'>
 <term>specific task</term>
 <def>Functions designed to be used with several programs.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='13'>
 <term>parameter passing</term>
 <def>How the data is communicated in to and out of a function.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='14'>
 <term>identifier name</term>
 <def>The name given by the programmer to identify a function or other program items such as variables.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='15'>
 <term>function prototype</term>
 <def>A function's communications declaration to a complier.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='16'>
 <term>function call</term>
 <def>A function's using or invoking of another function.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='17'>
 <term>function definition</term>
 <def>The code that defines what a function does.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='18'>
 <term>braces</term>
 <def>Used to identify a block of code in C++.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='19'>
 <term>IPO</term>
 <def>Inputs - Processing - Outputs</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='20'>
 <term>pseudocode</term>
 <def>English-like statements used to convey the steps of an algorithm or function. </def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='21'>
 <term>test data</term>
 <def>Providing input values and predicting the outputs.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='22'>
 <term>pseudo </term>
 <def>Means false and includes the concepts of fake or imitation.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='23'>
 <term>model checking</term>
 <def>Using test data to check the design model (usually done in pseudocode).</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='24'>
 <term>code checking</term>
 <def>Using test data to check the coded program in a specific language (like C++).</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='25'>
 <term>data type</term>
 <def>Defines a set of values and a set of operations that can be applied on those values.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='26'>
 <term>data type families</term>
 <def>1) Nothing 2) Integer 3) Floating-Point 4) Complex</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='27'>
 <term>domain</term>
 <def>The set of allowed values for a data type.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='28'>
 <term>integer</term>
 <def>A data type representing whole numbers.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='29'>
 <term>floating point</term>
 <def>A data type representing numbers with fractional parts.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='30'>
 <term>reserved word</term>
 <def>Words that can not be used by the programmer as identifier names because they already have a specific meaning within the programming language.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='31'>
 <term>constant</term>
 <def>A data item whose value cannot change during the program's execution.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='32'>
 <term>variable</term>
 <def>A data item whose value can change during the program's execution.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='33'>
 <term>expression</term>
 <def>A valid sequence of operand(s) and operator(s) that reduces (or evaluates) to a single value.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='34'>
 <term>operator</term>
 <def>A language-specific syntactical token (usually a symbol) that causes an action to be taken on one or more operands.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='35'>
 <term>operand</term>
 <def>A value that receives the operator's action.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='36'>
 <term>precedence</term>
 <def>Determines the order in which the operators are allowed to manipulate the operands.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='37'>
 <term>associativity</term>
 <def>Determines the order in which the operators of the same precedence are allowed to manipulate the operands.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='38'>
 <term>evaluation</term>
 <def>The process of applying the operators to the operands and resulting in a single value.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='39'>
 <term>parentheses</term>
 <def>Change the order of evaluation in an expression. You do what's in the parentheses first.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='40'>
 <term>assignment</term>
 <def>An operator that changes the value of a modifiable data object.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='41'>
 <term>implicit</term>
 <def>A value that has its data type changed automatically.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='42'>
 <term>explicit</term>
 <def>Changing a value's data type with the cast operator.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='43'>
 <term>promotion</term>
 <def>Going from a smaller domain to a larger domain.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='44'>
 <term>demotion</term>
 <def>Going from a larger domain to a smaller domain.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='45'>
 <term>truncation</term>
 <def>The fractional part of a floating-point data type that is dropped when converted to an integer.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='46'>
 <term>machine dependent</term>
 <def>An attribute of a programming language that changes depending on the computer's CPU.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='47'>
 <term>double</term>
 <def>The most often used floating-point family data type used in C++. </def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='48'>
 <term>precision</term>
 <def>The effect on the domain of floating-point values given a larger or smaller storage area in bytes.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='49'>
 <term>mantissa exponent</term>
 <def>The two integer parts of a floating-point value.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='50'>
 <term>string</term>
 <def>A series or array of characters as a single piece of data.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='51'>
 <term>Lvalue</term>
 <def>The requirement that the operand on the left side of the assignment operator is modifiable usually a variable.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='52'>
 <term>Rvalue</term>
 <def>Pulls or fetches the value stored in a variable or constant.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='53'>
 <term>integer division</term>
 <def>Division with no fractional parts.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='54'>
 <term>modulus</term>
 <def>The remainder part of integer division.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='55'>
 <term>text editor</term>
 <def>A software program for creating and editing ASCII text files.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='56'>
 <term>compiler</term>
 <def>Converts source code to object code.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='57'>
 <term>pre processor</term>
 <def>The first step the complier does in converting source code to object code.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='58'>
 <term>linker</term>
 <def>Connects or links object files into an executable file.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='59'>
 <term>loader</term>
 <def>Part of the operating system that loads executable files into memory and direct the CPU to start running the program.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='60'>
 <term>debugging</term>
 <def>The process of removing errors from a program. 1) compiler 2) linker 3) logic</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='61'>
 <term>warning</term>
 <def>A compiler alert that there might be a problem.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='62'>
 <term>device</term>
 <def>A piece of equipment that is electronically connected to the memory so that data can be transferred between the memory and the device.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='63'>
 <term>standard input</term>
 <def>The keyboard.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='64'>
 <term>standard output</term>
 <def>The monitor.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='65'>
 <term>insertion</term>
 <def>Aka writing or sending data to an output device.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='66'>
 <term>extraction</term>
 <def>Aka reading or getting data from an input device.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='67'>
 <term>escape code</term>
 <def>A code directing an output device to do something.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='68'>
 <term>compiler directive</term>
 <def>An instruction to the compiler to complete a task before formally starting to compile the program.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
<orderset value='69'>
 <term>include</term>
 <def>A compiler directive to insert the contents of a file into the program.</def>
 <image></image>
 <width></width>
 <height></height>
</orderset>
</order>
