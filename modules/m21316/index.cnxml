<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Array Index Operator</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m21316</md:content-id>
  <md:title>Array Index Operator</md:title>
  <md:abstract>An introduction to the array index operator as used within the C++ programming language.</md:abstract>
  <md:uuid>f9cadf7b-bbc5-43d1-8869-d3f5a0720316</md:uuid>
</metadata>
<featured-links>
  <!-- WARNING! The 'featured-links' section is read only. Do not edit below.
       Changes to the links section in the source will not be saved. -->
    <link-group type="supplemental">
      <link url="http://cnx.org/content/m18168/latest/" strength="2">Abbreviated Precedence Chart for C++ Operators</link>
      <link url="http://cnx.org/content/m21317/latest/" strength="2">Displaying Array Members</link>
    </link-group>
    <link-group type="prerequisite">
      <link url="http://cnx.org/content/m21315/latest/" strength="3">Array Data Type</link>
    </link-group>
  <!-- WARNING! The 'featured-links' section is read only. Do not edit above.
       Changes to the links section in the source will not be saved. -->
</featured-links>
<content>
    <section id="id4790632">
      <title>Array Index Operator in C++</title>
      <para id="id5791282">Example:</para>
      <para id="id8709375">
        <code display="inline">int ages[5] = {49,48,26,19,16};</code>
      </para>
      <para id="id8755618">
        <code display="inline">int my_age;</code>
      </para>
      <para id="id8788915">
        <code display="inline">my_age = ages[2]</code>
      </para>
      <para id="id8727235">This second usage of the square brackets is as the <emphasis>array notation of dereference</emphasis> or more commonly called the <emphasis>index operator</emphasis>. As an operator it either provides the value held by the member of the array (Rvalue) or changes the value of member (Lvalue). In the above example the member that is two offsets from the front of the array (the value 26) is assigned to variable named my_age. The dereference operator of [2] means to go the 2<sup>nd</sup> <emphasis>offset</emphasis> from the front of the ages array and get the value stored there. In this case the value would be 26. The array members (or elements) are referenced starting at zero. The more common way for people to reference a list is by starting with one. Many programming languages reference array members starting at one, however for some languages (and C++ is one of them) you will need to <emphasis>change your thinking</emphasis>. Consider:</para>
      <table id="id8627696" summary="">
        <tgroup cols="4">
          <colspec colnum="1" colname="c1"/>
          <colspec colnum="2" colname="c2"/>
          <colspec colnum="3" colname="c3"/>
          <colspec colnum="4" colname="c4"/>
          <tbody>
            <row>
              <entry>
                <emphasis>Position</emphasis>
              </entry>
              <entry>
                <emphasis>C++</emphasis>
              </entry>
              <entry>
                <emphasis>Miss America</emphasis>
              </entry>
              <entry>
                <emphasis>Other Contests</emphasis>
              </entry>
            </row>
            <row>
              <entry>zero offsets from the front</entry>
              <entry>ages [0]</entry>
              <entry>Winner</entry>
              <entry>1<sup>st</sup> Place</entry>
            </row>
            <row>
              <entry>one offsets from the front</entry>
              <entry>ages [1]</entry>
              <entry>1<sup>st</sup> Runner Up</entry>
              <entry>2<sup>nd</sup> Place</entry>
            </row>
            <row>
              <entry>two offsets from the front</entry>
              <entry>ages [2]</entry>
              <entry>2<sup>nd</sup> Runner Up</entry>
              <entry>3<sup>rd</sup> Place</entry>
            </row>
            <row>
              <entry>three offsets from the front</entry>
              <entry>ages [3]</entry>
              <entry>3<sup>rd</sup> Runner Up</entry>
              <entry>4<sup>th</sup> Place</entry>
            </row>
            <row>
              <entry>four offsets from the front</entry>
              <entry>ages [4]</entry>
              <entry>4<sup>th</sup> Runner Up</entry>
              <entry>5<sup>th</sup> Place</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para id="id8556525">Saying that my cousin is the 2<sup>nd</sup> Runner Up in the Miss America contest sounds so much better than saying that she was in 3<sup>rd</sup> Place. We would be talking about the same position in the array of the five finalists.</para>
      <para id="id8735246">
        <code display="inline">ages[3] = 20;</code>
      </para>
      <para id="id6116994">This is an example of changing an arrayâ€™s value by assigning 20 to the 4<sup>th</sup> member of the array and replacing the value 19 with 20. This is an Lvalue context because the array is on the left side of the assignment operator.</para>
      <para id="id6132834">The C++ operator name is called the array index or simply the index operator and it uses the square brackets as the operator symbols.</para>
    </section>
    <section id="id6065317">
      <title>Definitions</title>
    <definition id="fs-id23819019">
      <term>array member</term>
      <meaning id="fs-id24529214">An element or value in an array.  </meaning>
    </definition>
    <definition id="fs-id3830547">
      <term>index</term>
      <meaning id="fs-id24164792">An operator that allows us to reference a member of an array.  </meaning>
    </definition>
    <definition id="fs-id4233233">
      <term>offset</term>
      <meaning id="fs-id4201502">The method of referencing array members by starting at zero.   </meaning>
    </definition>
    </section>
  </content>
</document>